{"version":3,"sources":["../src/WebpackCleanupPlugin.js"],"names":["WebpackCleanupPlugin","options","compiler","outputPath","output","path","plugin","stats","outputFileSystem","constructor","name","assets","toJson","map","asset","exclude","files","preview","console","log","length","forEach","file","unlinkSync","quiet","module","exports"],"mappings":";;qjBAAA;;AAEA;;;;AACA;;;;AAEA;;;;;;;;IAEMA,oB;AAEJ,kCAA0B;AAAA,QAAdC,OAAc,uEAAJ,EAAI;;AAAA;;AACxB,SAAKA,OAAL,GAAeA,OAAf;AACD;;;;0BAEKC,Q,EAAU;AAAA;;AACd,UAAMC,aAAaD,SAASD,OAAT,CAAiBG,MAAjB,CAAwBC,IAA3C;;AAEAH,eAASI,MAAT,CAAgB,MAAhB,EAAwB,UAACC,KAAD,EAAW;AACjC,YAAIL,SAASM,gBAAT,CAA0BC,WAA1B,CAAsCC,IAAtC,KAA+C,sBAAnD,EAA2E;AACzE;AACD;;AAED,YAAMC,SAASJ,MAAMK,MAAN,GAAeD,MAAf,CAAsBE,GAAtB,CAA0B;AAAA,iBAASC,MAAMJ,IAAf;AAAA,SAA1B,CAAf;AACA,YAAMK,UAAU,sBAAM,MAAKd,OAAL,CAAac,OAAnB,EAA4BJ,MAA5B,CAAhB;AACA,YAAMK,QAAQ,wBAASb,UAAT,EAAqBY,OAArB,CAAd;;AAEA,YAAI,MAAKd,OAAL,CAAagB,OAAjB,EAA0B;AACxBC,kBAAQC,GAAR,CAAY,8BAAZ,EAA4CH,MAAMI,MAAlD;AACAJ,gBAAMK,OAAN,CAAc;AAAA,mBAAQH,QAAQC,GAAR,CAAY,QAAZ,EAAsBG,IAAtB,CAAR;AAAA,WAAd;AACAJ,kBAAQC,GAAR;AACD,SAJD,MAIO;AACLH,gBAAMK,OAAN,CAAc,aAAGE,UAAjB;AACD;AACD,YAAI,CAAC,MAAKtB,OAAL,CAAauB,KAAlB,EAAyB;AACvBN,kBAAQC,GAAR,CAAY,6CAAZ,EAA2DH,MAAMI,MAAjE;AACD;AACF,OAnBD;AAoBD;;;;;;AAIHK,OAAOC,OAAP,GAAiB1B,oBAAjB","file":"WebpackCleanupPlugin.js","sourcesContent":["/* eslint no-console: 0 */\n\nimport fs from 'fs';\nimport union from 'lodash.union';\n\nimport getFiles from './getFiles';\n\nclass WebpackCleanupPlugin {\n\n  constructor(options = {}) {\n    this.options = options;\n  }\n\n  apply(compiler) {\n    const outputPath = compiler.options.output.path;\n\n    compiler.plugin('done', (stats) => {\n      if (compiler.outputFileSystem.constructor.name !== 'NodeOutputFileSystem') {\n        return;\n      }\n\n      const assets = stats.toJson().assets.map(asset => asset.name);\n      const exclude = union(this.options.exclude, assets);\n      const files = getFiles(outputPath, exclude);\n\n      if (this.options.preview) {\n        console.log('%s file(s) would be deleted:', files.length);\n        files.forEach(file => console.log('    %s', file));\n        console.log();\n      } else {\n        files.forEach(fs.unlinkSync);\n      }\n      if (!this.options.quiet) {\n        console.log('\\nWebpackCleanupPlugin: %s file(s) deleted.', files.length);\n      }\n    });\n  }\n\n}\n\nmodule.exports = WebpackCleanupPlugin;\n"]}